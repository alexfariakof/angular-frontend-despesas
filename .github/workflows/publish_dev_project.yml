name: Deploy Development Project
on:
  workflow_run:
    workflows: ["Build And Test Code in Sonar Cloud"]
    types:
      - completed

  workflow_dispatch:
    inputs:
      e2e_test_input:
        description: 'Trigger Workflow End-to-End'
        required: true

  push:
    branches:
      - release

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - release

jobs:
  build_and_push_docker_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Build Docker image
        env:
          DOCKER_CLI_AGGREGATE: 1
        run: |
          docker-compose -f docker-compose.dev.yml build
        continue-on-error: false

      - name: Push Docker image to Docker Hub
        env:
          DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_CLI_AGGREGATE: 1
        run: |
            docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker push ${{ secrets.DOCKER_IMAGE_DEV }}
        continue-on-error: false

  deploy_dev:
    needs: build_and_push_docker_image
    name: Deploy Developement Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Execute SSH Commands into EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          AWS_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
          DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: 22
          script: |
            IMAGEM="${{ secrets.DOCKER_IMAGE_DEV }}"
            container_id=$(docker ps -a -q --filter "ancestor=$IMAGEM")
            image_id=$(docker images --format "{{.ID}}" "$IMAGEM")
            docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker rm --force $container_id
            docker rmi --force $image_id
            docker pull $IMAGEM
            container_id=$(docker ps -a -q --filter "ancestor=$IMAGEM")
            docker run -d -p 4200:4200 $IMAGEM
        continue-on-error: false

  trigger_e2e_tests:
    needs: deploy_dev
    name: Trigger Run End-to-End Tests
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Workflow Tests End-to-End
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const response = await octokit.actions.createWorkflowDispatch({
              owner: ${{ github.repository_owner }},
              repo: ${{ github.repository }},
              workflow_file: '.github/workflows/Tests_e2e.yml',
              ref: context.sha,
              inputs: {
                e2e_test_input: 'run'
              }
            });
            console.log(response);
