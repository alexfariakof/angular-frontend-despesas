name: Run Tests e2e
on:
  #workflow_run:
    #workflows: Deploy Development Project
    #types:
     # - completed
  push:
    branches:
      - feature/Create-workflow-to-trigger-e2e-tests

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - pre-release
  workflow_dispatch:

jobs:
  trigger-tests-e2e:
    runs-on: ubuntu-latest
    steps:

      - name: Trigger Workflow
        run: |
            repo=${{ github.repository }}
            file_path=$(echo "attachments")

            curl -X POST \
              -H "Authorization: token ${{ secrets.TRIGGER_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/alexfariakof/despesas-frontend-angular-tests-e2e/dispatches \
              -d "{\"event_type\":\"trigger-python-plyawright-e2e-tests\", \"client_payload\": {\"unit\": false, \"integration\": true, \"father_workflow_id\": \"${{ github.run_id }}\", \"path\": \"$file_path\", \"repo\": \"$repo\" }}"
        continue-on-error: false

      - name: Wait 15s To Workflow Initialize And Update File triggered-workflow-id
        run: sleep 15

      - name: Wait for Triggered Workflow Test e2e Run
        run: |
            download_url="https://raw.githubusercontent.com/${{ github.repository }}/master/attachments/triggered-workflow-id-${{ github.run_id }}"
            curl -o triggered-workflow-id -L "$download_url"
            triggered_workflow_id=$(cat triggered-workflow-id)
            echo "Triggered Workflow ID: $triggered_workflow_id"

            response=""
            status=""

            while true; do
              response=$(curl -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.TRIGGER_TOKEN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                "https://api.github.com/repos/alexfariakof/despesas-frontend-angular-tests-e2e/actions/runs/$triggered_workflow_id")

                status=$(echo $response | jq -r '.status')
                echo "Current status: $status"

                if [ "$status" == "queued" ] || [ "$status" == "in_progress" ]; then
                  sleep 20
                else
                  break
                fi
            done

            conclusion=$(echo $response | jq -r '.conclusion')

            if [ "$status" == "completed" ] && [ "$conclusion" == "success" ]; then
              echo $conclusion
              echo "workflow_status=${{ job.status }}" >> $GITHUB_OUTPUT
            else
              echo $conclusion
              echo "workflow_status=failure" >> $GITHUB_OUTPUT
              exit(1)
            fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
